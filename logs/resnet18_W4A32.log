ResNet18 quantization with myAdaRound!
Qparams computing done!
    QuantModule: conv1, torch.Size([64, 3, 7, 7])
    QuantModule: layer1.0.conv1, torch.Size([64, 64, 3, 3])
    QuantModule: layer1.0.conv2, torch.Size([64, 64, 3, 3])
    QuantModule: layer1.1.conv1, torch.Size([64, 64, 3, 3])
    QuantModule: layer1.1.conv2, torch.Size([64, 64, 3, 3])
    QuantModule: layer2.0.conv1, torch.Size([128, 64, 3, 3])
    QuantModule: layer2.0.conv2, torch.Size([128, 128, 3, 3])
    QuantModule: layer2.0.downsample.0, torch.Size([128, 64, 1, 1])
    QuantModule: layer2.1.conv1, torch.Size([128, 128, 3, 3])
    QuantModule: layer2.1.conv2, torch.Size([128, 128, 3, 3])
    QuantModule: layer3.0.conv1, torch.Size([256, 128, 3, 3])
    QuantModule: layer3.0.conv2, torch.Size([256, 256, 3, 3])
    QuantModule: layer3.0.downsample.0, torch.Size([256, 128, 1, 1])
    QuantModule: layer3.1.conv1, torch.Size([256, 256, 3, 3])
    QuantModule: layer3.1.conv2, torch.Size([256, 256, 3, 3])
    QuantModule: layer4.0.conv1, torch.Size([512, 256, 3, 3])
    QuantModule: layer4.0.conv2, torch.Size([512, 512, 3, 3])
    QuantModule: layer4.0.downsample.0, torch.Size([512, 256, 1, 1])
    QuantModule: layer4.1.conv1, torch.Size([512, 512, 3, 3])
    QuantModule: layer4.1.conv2, torch.Size([512, 512, 3, 3])
    QuantModule: fc, torch.Size([1000, 512])
Total QuantModule: 21
.    torch.Size([128, 64, 112, 112])
..    torch.Size([128, 64, 56, 56])
...    torch.Size([128, 64, 56, 56])
....    torch.Size([128, 64, 56, 56])
.....    torch.Size([128, 64, 56, 56])
......    torch.Size([128, 128, 28, 28])
.......    torch.Size([128, 128, 28, 28])
........    torch.Size([128, 128, 28, 28])
.........    torch.Size([128, 128, 28, 28])
..........    torch.Size([128, 128, 28, 28])
...........    torch.Size([128, 256, 14, 14])
............    torch.Size([128, 256, 14, 14])
.............    torch.Size([128, 256, 14, 14])
..............    torch.Size([128, 256, 14, 14])
...............    torch.Size([128, 256, 14, 14])
................    torch.Size([128, 512, 7, 7])
.................    torch.Size([128, 512, 7, 7])
..................    torch.Size([128, 512, 7, 7])
...................    torch.Size([128, 512, 7, 7])
....................    torch.Size([128, 512, 7, 7])
.....................    torch.Size([128, 1000])
iter:    0, l2 loss: 17.5419, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.3408, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0483, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0282, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0269, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0264, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0260, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0257, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0255, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0253, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0252, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0252, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0251, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0251, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0250, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0250, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0250, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0250, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0250, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0250, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0250, reg_loss: 0.0000, beta = 0.00
,iter:    0, l2 loss: 17.0551, reg_loss: 0.0000, beta = 0.00 
iter:  500, l2 loss: 0.3026, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0356, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0160, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0148, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0144, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0141, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0139, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0137, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0135, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0134, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0134, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0133, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0133, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0132, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0132, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0132, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0132, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0132, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0132, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0132, reg_loss: 0.0000, beta = 0.00
,,iter:    0, l2 loss: 1.0876, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0243, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0068, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0057, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0055, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0054, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0053, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0053, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
,,,iter:    0, l2 loss: 19.9777, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.3313, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0434, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0243, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0224, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0218, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0214, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0209, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0206, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0203, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0201, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0200, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0199, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0198, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0198, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0197, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0197, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0197, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0197, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0197, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0197, reg_loss: 0.0000, beta = 0.00
,,,,iter:    0, l2 loss: 0.5958, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0177, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0077, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0070, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0068, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0068, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0067, reg_loss: 0.0000, beta = 0.00
,,,,,iter:    0, l2 loss: 15.2630, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.2876, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0662, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0514, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0500, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0492, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0484, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0478, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0473, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0470, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0468, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0466, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0465, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0465, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0464, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0464, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0464, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0464, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0464, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0464, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0464, reg_loss: 0.0000, beta = 0.00
,,,,,,iter:    0, l2 loss: 2.1582, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0432, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0104, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0081, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0078, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0077, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0076, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0076, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0075, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0075, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0075, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0074, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0074, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0074, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0074, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0074, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0074, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0074, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0074, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0074, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0074, reg_loss: 0.0000, beta = 0.00
,,,,,,,iter:    0, l2 loss: 0.3046, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0144, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0092, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0089, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0088, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0088, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0087, reg_loss: 0.0000, beta = 0.00
,,,,,,,,iter:    0, l2 loss: 8.2651, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.1466, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0311, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0237, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0227, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0222, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0218, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0215, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0212, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0210, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0209, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0208, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0208, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0208, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0208, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0207, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0207, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0207, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0207, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0207, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0207, reg_loss: 0.0000, beta = 0.00
,,,,,,,,,iter:    0, l2 loss: 0.3403, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0101, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0048, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0047, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0046, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0046, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
,,,,,,,,,,iter:    0, l2 loss: 4.9710, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.1056, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0350, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0303, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0295, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0290, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0286, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0283, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0281, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0279, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0279, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0278, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0278, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0278, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0278, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0278, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0278, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0278, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0278, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0278, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0278, reg_loss: 0.0000, beta = 0.00
,,,,,,,,,,,iter:    0, l2 loss: 3.4978, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0685, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0166, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0130, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0125, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0123, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0121, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0120, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0119, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0118, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0117, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0117, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0117, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0117, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0117, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0117, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0117, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0117, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0117, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0117, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0117, reg_loss: 0.0000, beta = 0.00
,,,,,,,,,,,,iter:    0, l2 loss: 0.0463, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0028, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0021, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0020, reg_loss: 0.0000, beta = 0.00
,,,,,,,,,,,,,iter:    0, l2 loss: 5.6756, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0946, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0204, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0161, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0156, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0152, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0149, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0146, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0144, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0142, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0141, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0140, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0140, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0139, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0139, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0139, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0139, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0139, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0139, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0139, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0139, reg_loss: 0.0000, beta = 0.00
,,,,,,,,,,,,,,iter:    0, l2 loss: 0.2904, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0070, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0033, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0030, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0028, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0028, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0028, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0027, reg_loss: 0.0000, beta = 0.00
,,,,,,,,,,,,,,,iter:    0, l2 loss: 3.4250, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0593, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0196, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0174, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0168, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0163, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0159, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0156, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0154, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0152, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0151, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0150, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0150, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0150, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0150, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0149, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0149, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0149, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0149, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0149, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0149, reg_loss: 0.0000, beta = 0.00
,,,,,,,,,,,,,,,,iter:    0, l2 loss: 0.7440, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0147, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0045, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0039, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0037, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0036, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0035, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0034, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0034, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0033, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0033, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0033, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0033, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0033, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
,,,,,,,,,,,,,,,,,iter:    0, l2 loss: 0.1285, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0052, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0031, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0030, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0030, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0030, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0030, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0029, reg_loss: 0.0000, beta = 0.00
,,,,,,,,,,,,,,,,,,iter:    0, l2 loss: 2.8763, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0449, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0259, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0240, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0224, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0212, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0203, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0197, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0194, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0191, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0189, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0188, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0188, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0187, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0187, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0187, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0187, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0187, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0187, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0187, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0187, reg_loss: 0.0000, beta = 0.00
,,,,,,,,,,,,,,,,,,,iter:    0, l2 loss: 0.4734, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 0.0134, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.0042, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.0035, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.0034, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.0034, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.0033, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.0033, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.0033, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.0032, reg_loss: 0.0000, beta = 0.00
,,,,,,,,,,,,,,,,,,,,iter:    0, l2 loss: 97.8691, reg_loss: 0.0000, beta = 0.00
iter:  500, l2 loss: 2.4107, reg_loss: 0.0000, beta = 0.00
iter:  1000, l2 loss: 0.8278, reg_loss: 0.0000, beta = 0.00
iter:  1500, l2 loss: 0.7166, reg_loss: 0.0000, beta = 0.00
iter:  2000, l2 loss: 0.7035, reg_loss: 0.0000, beta = 0.00
iter:  2500, l2 loss: 0.6948, reg_loss: 0.0000, beta = 0.00
iter:  3000, l2 loss: 0.6879, reg_loss: 0.0000, beta = 0.00
iter:  3500, l2 loss: 0.6830, reg_loss: 0.0000, beta = 0.00
iter:  4000, l2 loss: 0.6799, reg_loss: 0.0000, beta = 0.00
iter:  4500, l2 loss: 0.6780, reg_loss: 0.0000, beta = 0.00
iter:  5000, l2 loss: 0.6769, reg_loss: 0.0000, beta = 0.00
iter:  5500, l2 loss: 0.6762, reg_loss: 0.0000, beta = 0.00
iter:  6000, l2 loss: 0.6759, reg_loss: 0.0000, beta = 0.00
iter:  6500, l2 loss: 0.6757, reg_loss: 0.0000, beta = 0.00
iter:  7000, l2 loss: 0.6756, reg_loss: 0.0000, beta = 0.00
iter:  7500, l2 loss: 0.6755, reg_loss: 0.0000, beta = 0.00
iter:  8000, l2 loss: 0.6755, reg_loss: 0.0000, beta = 0.00
iter:  8500, l2 loss: 0.6755, reg_loss: 0.0000, beta = 0.00
iter:  9000, l2 loss: 0.6754, reg_loss: 0.0000, beta = 0.00
iter:  9500, l2 loss: 0.6754, reg_loss: 0.0000, beta = 0.00
iter:  10000, l2 loss: 0.6754, reg_loss: 0.0000, beta = 0.00
AdaRound values computing done!

 Quantized model Evaluation accuracy on 50000 images, 67.31
Total time: 748.30 sec




dot : FP forward
comma : AdaRound forward (rounding values are determined.)

commit : resnet18 W4A32 10k iter; 67.31% without reg term